"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[109],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),m=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=m(n),d=r,h=c["".concat(o,".").concat(d)]||c[d]||p[d]||l;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6145:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return s},metadata:function(){return m},toc:function(){return p}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),i=["components"],s={sidebar_position:1},o="API Reference",m={unversionedId:"Discorder/Reference/intro",id:"Discorder/Reference/intro",title:"API Reference",description:"Base URL",source:"@site/docs/Discorder/Reference/intro.md",sourceDirName:"Discorder/Reference",slug:"/Discorder/Reference/intro",permalink:"/docs/Discorder/Reference/intro",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Upload a transcript",permalink:"/docs/Discorder/upload-a-transcript"}},u={},p=[{value:"Base URL",id:"base-url",level:2},{value:"Channel",id:"channel",level:2},{value:"Embed",id:"embed",level:2},{value:"EmbedAuthor",id:"embedauthor",level:2},{value:"EmbedField",id:"embedfield",level:2},{value:"EmbedFooter",id:"embedfooter",level:2},{value:"EmbedImage",id:"embedimage",level:2},{value:"Guild",id:"guild",level:2},{value:"Member",id:"member",level:2},{value:"Message",id:"message",level:2},{value:"MessageAttachment",id:"messageattachment",level:2},{value:"MessageInteraction",id:"messageinteraction",level:2},{value:"MessageReference",id:"messagereference",level:2},{value:"Role",id:"role",level:2},{value:"ThreadChannel",id:"threadchannel",level:2},{value:"User",id:"user",level:2}],c={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"api-reference"},"API Reference"),(0,l.kt)("h2",{id:"base-url"},"Base URL"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"string"))),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"https://example.com/")),(0,l.kt)("h2",{id:"channel"},"Channel"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Channel = {\n    guild: Guild; // The guild the channel is in\n    id: string; // The ID of the channel\n    name: string; // The name of the channel\n};\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#guild"},"Guild"))),(0,l.kt)("h2",{id:"embed"},"Embed"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Embed = {\n    author?: EmbedAuthor; // Author information\n    color?: number; // Color code of the embed\n    description?: string; // Description of embed\n    fields?: EmbedField[]; // Fields information\n    footer?: EmbedFooter; // Footer information\n    image?: EmbedImage; // Image information\n    timestamp?: number; // Timestamp of embed content\n    title?: string; // Title of embed\n    url?: string; // Url of embed\n};\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#embedauthor"},"EmbedAuthor")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#embedfield"},"EmbedField")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#embedfooter"},"EmbedFooter")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#embedimage"},"EmbedImage"))),(0,l.kt)("h2",{id:"embedauthor"},"EmbedAuthor"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type EmbedAuthor = {\n    iconUrl?: string; // Url of author icon\n    name: string; // Name of author\n    url?: string; // Url of author\n};\n")),(0,l.kt)("h2",{id:"embedfield"},"EmbedField"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type EmbedField = {\n    inline?: boolean; // Whether or not this field should display inline\n    name: string; // Name of the field\n    value: string; // Value of the field\n};\n")),(0,l.kt)("h2",{id:"embedfooter"},"EmbedFooter"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type EmbedFooter = {\n    text: string; // Footer text\n    iconUrl?: string; // Url of footer icon\n};\n")),(0,l.kt)("h2",{id:"embedimage"},"EmbedImage"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type EmbedImage = {\n    url: string; // Source url of image\n};\n")),(0,l.kt)("h2",{id:"guild"},"Guild"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Guild = {\n    icon: string | null; // Guild icon's hash\n    id: string; // The guild's ID\n    name: string; // The guild's name\n};\n")),(0,l.kt)("h2",{id:"member"},"Member"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Member = {\n    avatar?: string | null; // The member's guild avatar hash\n    nick?: string | null; // This user's guild nickname\n};\n")),(0,l.kt)("h2",{id:"message"},"Message"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Message = {\n    attachments?: MessageAttachment[]; // Any attached files to the message\n    author: User; // The author of this message\n    content?: string; // The contents of the message\n    editedTimestamp: number | null; // When this message was edited (or null if never)\n    embeds?: Embed[]; // Any embedded content\n    id?: string; // The ID of the message\n    interaction?: MessageInteraction; // If the message is a response to an interaction, the interaction it responds to\n    member?: Member; // The member properties for this message's author\n    mentionChannels?: Channel[]; // The channels specifically mentioned in this message\n    mentionRoles?: Role[]; // The roles specifically mentioned in this message\n    mentions?: User[]; // The users specifically mentioned in the message\n    messageReference?: MessageReference; // The data showing the source of a crosspost, channel follow add, pin, or reply message\n    thread?: ThreadChannel; // The thread that was started from this message, includes thread member object\n    timestamp: number; // An ISO8601 timestamp representing when this message was sent\n    type: number; // The type of the message\n};\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#channel"},"Channel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#embed"},"Embed")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#member"},"Member")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#messageattachment"},"MessageAttachment")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#messageinteraction"},"MessageInteraction")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#messagereference"},"MessageReference")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#role"},"Role")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#threadchannel"},"ThreadChannel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#user"},"User"))),(0,l.kt)("h2",{id:"messageattachment"},"MessageAttachment"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type MessageAttachment = {\n    contentType?: string; // The attachment's media type\n    url: string; // The source URL of the file\n};\n")),(0,l.kt)("h2",{id:"messageinteraction"},"MessageInteraction"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type MessageInteraction = {\n    member?: Member;\n    name: string;\n    user: User;\n};\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#member"},"Member")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#user"},"User"))),(0,l.kt)("h2",{id:"messagereference"},"MessageReference"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type MessageReference = {\n    messageId?: string;\n};\n")),(0,l.kt)("h2",{id:"role"},"Role"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type Role = {\n    id: string; // Role id\n    name: string; // Role name\n};\n")),(0,l.kt)("h2",{id:"threadchannel"},"ThreadChannel"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type ThreadChannel = {\n    name: string; // The name of the channel\n};\n")),(0,l.kt)("h2",{id:"user"},"User"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Type: ",(0,l.kt)("inlineCode",{parentName:"li"},"object"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"type User = {\n    accentColor?: number | null; // The user's banner color encoded as an integer representation of hexadecimal color code\n    avatar: string | null; // The user's avatar hash\n    banner?: string | null; // The user's banner hash\n    bot?: boolean; // Whether the user belongs to an OAuth2 application\n    discriminator: string; // The user's 4-digit discord-tag\n    id: string; // The user's id\n    username: string; // The user's username, not unique across the platform\n};\n")))}d.isMDXComponent=!0}}]);